package imagebinarization;

import imagebinarization.math.Binarization;
import imagebinarization.model.Charter;
import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.FlowLayout;
import java.awt.image.BufferedImage;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.jfree.chart.ChartPanel;

public class Application extends javax.swing.JFrame {
    
    /**
     * Creates new form IBJFrame
     */
    public Application() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonLoadImage = new javax.swing.JButton();
        imagePanelInitial = new imagebinarization.model.ImagePanel();
        imagePanelGrayscale = new imagebinarization.model.ImagePanel();
        imagePanelHistogram = new imagebinarization.model.ImagePanel();
        imagePanelFinal = new imagebinarization.model.ImagePanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Image binarization - Otsu's algorithm");

        jButtonLoadImage.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonLoadImage.setText("Load image");
        jButtonLoadImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLoadImageActionPerformed(evt);
            }
        });

        imagePanelInitial.setBackground(new java.awt.Color(204, 204, 204));
        imagePanelInitial.setPreferredSize(new java.awt.Dimension(306, 256));

        javax.swing.GroupLayout imagePanelInitialLayout = new javax.swing.GroupLayout(imagePanelInitial);
        imagePanelInitial.setLayout(imagePanelInitialLayout);
        imagePanelInitialLayout.setHorizontalGroup(
            imagePanelInitialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 306, Short.MAX_VALUE)
        );
        imagePanelInitialLayout.setVerticalGroup(
            imagePanelInitialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 256, Short.MAX_VALUE)
        );

        imagePanelGrayscale.setBackground(new java.awt.Color(204, 204, 204));
        imagePanelGrayscale.setPreferredSize(new java.awt.Dimension(306, 256));

        javax.swing.GroupLayout imagePanelGrayscaleLayout = new javax.swing.GroupLayout(imagePanelGrayscale);
        imagePanelGrayscale.setLayout(imagePanelGrayscaleLayout);
        imagePanelGrayscaleLayout.setHorizontalGroup(
            imagePanelGrayscaleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 306, Short.MAX_VALUE)
        );
        imagePanelGrayscaleLayout.setVerticalGroup(
            imagePanelGrayscaleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 256, Short.MAX_VALUE)
        );

        imagePanelHistogram.setBackground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout imagePanelHistogramLayout = new javax.swing.GroupLayout(imagePanelHistogram);
        imagePanelHistogram.setLayout(imagePanelHistogramLayout);
        imagePanelHistogramLayout.setHorizontalGroup(
            imagePanelHistogramLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 306, Short.MAX_VALUE)
        );
        imagePanelHistogramLayout.setVerticalGroup(
            imagePanelHistogramLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 256, Short.MAX_VALUE)
        );

        imagePanelFinal.setBackground(new java.awt.Color(204, 204, 204));
        imagePanelFinal.setPreferredSize(new java.awt.Dimension(306, 256));

        javax.swing.GroupLayout imagePanelFinalLayout = new javax.swing.GroupLayout(imagePanelFinal);
        imagePanelFinal.setLayout(imagePanelFinalLayout);
        imagePanelFinalLayout.setHorizontalGroup(
            imagePanelFinalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 306, Short.MAX_VALUE)
        );
        imagePanelFinalLayout.setVerticalGroup(
            imagePanelFinalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jLabel1.setText("Original image");

        jLabel2.setText("Grayscale");

        jLabel3.setText("Histogram");

        jLabel4.setText("Binarized image");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(imagePanelHistogram, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(imagePanelFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButtonLoadImage, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(imagePanelInitial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(imagePanelGrayscale, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(117, 117, 117)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(115, 115, 115))
            .addGroup(layout.createSequentialGroup()
                .addGap(111, 111, 111)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(131, 131, 131))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonLoadImage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(imagePanelInitial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(imagePanelGrayscale, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(imagePanelHistogram, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(imagePanelFinal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3))
                .addGap(10, 10, 10))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonLoadImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLoadImageActionPerformed
        final JFileChooser fileChooser = new JFileChooser();
        fileChooser.addChoosableFileFilter(new FileNameExtensionFilter("Image Files", "jpg", "png", "tif")); 
        int retVal = fileChooser.showOpenDialog((Component) evt.getSource());
        if (retVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            try {
                // load initial image
                BufferedImage img = imagePanelInitial.loadImgFile(file);
                imagePanelInitial.repaint();
                
                // initial -> grayscale
                BufferedImage grayscaled = Binarization.toGrayscale(img);
                imagePanelGrayscale.setImage(grayscaled);
                imagePanelGrayscale.repaint();
                
                // histogram
                imagePanelHistogram.removeAll();
                ChartPanel histogram = Charter.getHistogramChart(grayscaled);
                imagePanelHistogram.setLayout(new FlowLayout());
                imagePanelHistogram.add(histogram, BorderLayout.NORTH);
                imagePanelHistogram.revalidate();
                
                // binarized
                BufferedImage binarized = Binarization.binarize(grayscaled);
                imagePanelFinal.setImage(binarized);
                imagePanelFinal.repaint();
                
            } catch (Exception ex) {
                System.out.println("Image load failed! Check if choosen file is in image format: " + file.getAbsolutePath());
            }
        } else {
            System.out.println("Image not selected.");
        }
    }//GEN-LAST:event_jButtonLoadImageActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Application.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Application.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Application.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Application.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Application().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private imagebinarization.model.ImagePanel imagePanelFinal;
    private imagebinarization.model.ImagePanel imagePanelGrayscale;
    private imagebinarization.model.ImagePanel imagePanelHistogram;
    private imagebinarization.model.ImagePanel imagePanelInitial;
    private javax.swing.JButton jButtonLoadImage;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    // End of variables declaration//GEN-END:variables
}
